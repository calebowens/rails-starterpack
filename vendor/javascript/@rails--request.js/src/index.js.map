// @rails/request.js@0.0.9/src/index.js.map downloaded from https://ga.jspm.io/npm:@rails/request.js@0.0.9/src/index.js.map

{"version":3,"file":"index.js","sources":["../src/fetch_response.js","../src/request_interceptor.js","../src/lib/utils.js","../src/fetch_request.js","../src/verbs.js"],"sourcesContent":["export class FetchResponse {\n  constructor (response) {\n    this.response = response\n  }\n\n  get statusCode () {\n    return this.response.status\n  }\n\n  get redirected () {\n    return this.response.redirected\n  }\n\n  get ok () {\n    return this.response.ok\n  }\n\n  get unauthenticated () {\n    return this.statusCode === 401\n  }\n\n  get unprocessableEntity () {\n    return this.statusCode === 422\n  }\n\n  get authenticationURL () {\n    return this.response.headers.get('WWW-Authenticate')\n  }\n\n  get contentType () {\n    const contentType = this.response.headers.get('Content-Type') || ''\n\n    return contentType.replace(/;.*$/, '')\n  }\n\n  get headers () {\n    return this.response.headers\n  }\n\n  get html () {\n    if (this.contentType.match(/^(application|text)\\/(html|xhtml\\+xml)$/)) {\n      return this.text\n    }\n\n    return Promise.reject(new Error(`Expected an HTML response but got \"${this.contentType}\" instead`))\n  }\n\n  get json () {\n    if (this.contentType.match(/^application\\/.*json$/)) {\n      return this.responseJson || (this.responseJson = this.response.json())\n    }\n\n    return Promise.reject(new Error(`Expected a JSON response but got \"${this.contentType}\" instead`))\n  }\n\n  get text () {\n    return this.responseText || (this.responseText = this.response.text())\n  }\n\n  get isTurboStream () {\n    return this.contentType.match(/^text\\/vnd\\.turbo-stream\\.html/)\n  }\n\n  async renderTurboStream () {\n    if (this.isTurboStream) {\n      if (window.Turbo) {\n        await window.Turbo.renderStreamMessage(await this.text)\n      } else {\n        console.warn('You must set `window.Turbo = Turbo` to automatically process Turbo Stream events with request.js')\n      }\n    } else {\n      return Promise.reject(new Error(`Expected a Turbo Stream response but got \"${this.contentType}\" instead`))\n    }\n  }\n}\n","export class RequestInterceptor {\n  static register (interceptor) {\n    this.interceptor = interceptor\n  }\n\n  static get () {\n    return this.interceptor\n  }\n\n  static reset () {\n    this.interceptor = undefined\n  }\n}\n","export function getCookie (name) {\n  const cookies = document.cookie ? document.cookie.split('; ') : []\n  const prefix = `${encodeURIComponent(name)}=`\n  const cookie = cookies.find(cookie => cookie.startsWith(prefix))\n\n  if (cookie) {\n    const value = cookie.split('=').slice(1).join('=')\n\n    if (value) {\n      return decodeURIComponent(value)\n    }\n  }\n}\n\nexport function compact (object) {\n  const result = {}\n\n  for (const key in object) {\n    const value = object[key]\n    if (value !== undefined) {\n      result[key] = value\n    }\n  }\n\n  return result\n}\n\nexport function metaContent (name) {\n  const element = document.head.querySelector(`meta[name=\"${name}\"]`)\n  return element && element.content\n}\n\nexport function stringEntriesFromFormData (formData) {\n  return [...formData].reduce((entries, [name, value]) => {\n    return entries.concat(typeof value === 'string' ? [[name, value]] : [])\n  }, [])\n}\n\nexport function mergeEntries (searchParams, entries) {\n  for (const [name, value] of entries) {\n    if (value instanceof window.File) continue\n\n    if (searchParams.has(name) && !name.includes('[]')) {\n      searchParams.delete(name)\n      searchParams.set(name, value)\n    } else {\n      searchParams.append(name, value)\n    }\n  }\n}\n","import { FetchResponse } from './fetch_response'\nimport { RequestInterceptor } from './request_interceptor'\nimport { getCookie, compact, metaContent, stringEntriesFromFormData, mergeEntries } from './lib/utils'\n\nexport class FetchRequest {\n  constructor (method, url, options = {}) {\n    this.method = method\n    this.options = options\n    this.originalUrl = url.toString()\n  }\n\n  async perform () {\n    try {\n      const requestInterceptor = RequestInterceptor.get()\n      if (requestInterceptor) {\n        await requestInterceptor(this)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n\n    const response = new FetchResponse(await window.fetch(this.url, this.fetchOptions))\n\n    if (response.unauthenticated && response.authenticationURL) {\n      return Promise.reject(window.location.href = response.authenticationURL)\n    }\n\n    const responseStatusIsTurboStreamable = response.ok || response.unprocessableEntity\n\n    if (responseStatusIsTurboStreamable && response.isTurboStream) {\n      await response.renderTurboStream()\n    }\n\n    return response\n  }\n\n  addHeader (key, value) {\n    const headers = this.additionalHeaders\n    headers[key] = value\n    this.options.headers = headers\n  }\n\n  sameHostname () {\n    if (!this.originalUrl.startsWith('http:')) {\n      return true\n    }\n\n    try {\n      return new URL(this.originalUrl).hostname === window.location.hostname\n    } catch (_) {\n      return true\n    }\n  }\n\n  get fetchOptions () {\n    return {\n      method: this.method.toUpperCase(),\n      headers: this.headers,\n      body: this.formattedBody,\n      signal: this.signal,\n      credentials: this.credentials,\n      redirect: this.redirect\n    }\n  }\n\n  get headers () {\n    const baseHeaders = {\n      'X-Requested-With': 'XMLHttpRequest',\n      'Content-Type': this.contentType,\n      Accept: this.accept\n    }\n\n    if (this.sameHostname()) {\n      baseHeaders['X-CSRF-Token'] = this.csrfToken\n    }\n\n    return compact(\n      Object.assign(baseHeaders, this.additionalHeaders)\n    )\n  }\n\n  get csrfToken () {\n    return getCookie(metaContent('csrf-param')) || metaContent('csrf-token')\n  }\n\n  get contentType () {\n    if (this.options.contentType) {\n      return this.options.contentType\n    } else if (this.body == null || this.body instanceof window.FormData) {\n      return undefined\n    } else if (this.body instanceof window.File) {\n      return this.body.type\n    }\n\n    return 'application/json'\n  }\n\n  get accept () {\n    switch (this.responseKind) {\n      case 'html':\n        return 'text/html, application/xhtml+xml'\n      case 'turbo-stream':\n        return 'text/vnd.turbo-stream.html, text/html, application/xhtml+xml'\n      case 'json':\n        return 'application/json, application/vnd.api+json'\n      default:\n        return '*/*'\n    }\n  }\n\n  get body () {\n    return this.options.body\n  }\n\n  get query () {\n    const originalQuery = (this.originalUrl.split('?')[1] || '').split('#')[0]\n    const params = new URLSearchParams(originalQuery)\n\n    let requestQuery = this.options.query\n    if (requestQuery instanceof window.FormData) {\n      requestQuery = stringEntriesFromFormData(requestQuery)\n    } else if (requestQuery instanceof window.URLSearchParams) {\n      requestQuery = requestQuery.entries()\n    } else {\n      requestQuery = Object.entries(requestQuery || {})\n    }\n\n    mergeEntries(params, requestQuery)\n\n    const query = params.toString()\n    return (query.length > 0 ? `?${query}` : '')\n  }\n\n  get url () {\n    return (this.originalUrl.split('?')[0]).split('#')[0] + this.query\n  }\n\n  get responseKind () {\n    return this.options.responseKind || 'html'\n  }\n\n  get signal () {\n    return this.options.signal\n  }\n\n  get redirect () {\n    return this.options.redirect || 'follow'\n  }\n\n  get credentials () {\n    return this.options.credentials || 'same-origin'\n  }\n\n  get additionalHeaders () {\n    return this.options.headers || {}\n  }\n\n  get formattedBody () {\n    const bodyIsAString = Object.prototype.toString.call(this.body) === '[object String]'\n    const contentTypeIsJson = this.headers['Content-Type'] === 'application/json'\n\n    if (contentTypeIsJson && !bodyIsAString) {\n      return JSON.stringify(this.body)\n    }\n\n    return this.body\n  }\n}\n","import { FetchRequest } from './fetch_request'\n\nasync function get (url, options) {\n  const request = new FetchRequest('get', url, options)\n  return request.perform()\n}\n\nasync function post (url, options) {\n  const request = new FetchRequest('post', url, options)\n  return request.perform()\n}\n\nasync function put (url, options) {\n  const request = new FetchRequest('put', url, options)\n  return request.perform()\n}\n\nasync function patch (url, options) {\n  const request = new FetchRequest('patch', url, options)\n  return request.perform()\n}\n\nasync function destroy (url, options) {\n  const request = new FetchRequest('delete', url, options)\n  return request.perform()\n}\n\nexport { get, post, put, patch, destroy }\n"],"names":["FetchResponse","constructor","response","this","statusCode","status","redirected","ok","unauthenticated","unprocessableEntity","authenticationURL","headers","get","contentType","replace","html","match","text","Promise","reject","Error","json","responseJson","responseText","isTurboStream","async","window","Turbo","renderStreamMessage","console","warn","RequestInterceptor","static","interceptor","undefined","getCookie","name","cookies","document","cookie","split","prefix","encodeURIComponent","find","startsWith","value","slice","join","decodeURIComponent","compact","object","result","key","metaContent","element","head","querySelector","content","stringEntriesFromFormData","formData","reduce","entries","concat","mergeEntries","searchParams","File","has","includes","delete","set","append","FetchRequest","method","url","options","originalUrl","toString","requestInterceptor","error","fetch","fetchOptions","location","href","responseStatusIsTurboStreamable","renderTurboStream","addHeader","additionalHeaders","sameHostname","URL","hostname","_","toUpperCase","body","formattedBody","signal","credentials","redirect","baseHeaders","Accept","accept","csrfToken","Object","assign","FormData","type","responseKind","query","originalQuery","params","URLSearchParams","requestQuery","length","bodyIsAString","prototype","call","contentTypeIsJson","JSON","stringify","request","perform","post","put","patch","destroy"],"mappings":"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"}