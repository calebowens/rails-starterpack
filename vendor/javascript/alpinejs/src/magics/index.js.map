// alpinejs@3.13.5/src/magics/index.js.map downloaded from https://ga.jspm.io/npm:alpinejs@3.13.5/src/magics/index.js.map

{"version":3,"file":"index.js","sources":["../../src/magics/$nextTick.js","../../src/magics/$dispatch.js","../../src/magics/$watch.js","../../src/magics/$store.js","../../src/magics/$data.js","../../src/magics/$root.js","../../src/magics/$refs.js","../../src/magics/$id.js","../../src/magics/$el.js","../../src/magics/index.js"],"sourcesContent":["import { nextTick } from '../nextTick'\nimport { magic } from '../magics'\n\nmagic('nextTick', () => nextTick)\n","import { dispatch } from '../utils/dispatch'\nimport { magic } from '../magics'\n\nmagic('dispatch', el => dispatch.bind(dispatch, el))\n","import { magic } from '../magics'\nimport { effect, release, watch } from '../reactivity'\n\nmagic('watch', (el, { evaluateLater, cleanup }) => (key, callback) => {\n    let evaluate = evaluateLater(key)\n\n    let getter = () => {\n        let value\n\n        evaluate(i => value = i)\n\n        return value\n    }\n\n    let unwatch = watch(getter, callback)\n\n    cleanup(unwatch)\n})\n\n","import { getStores } from '../store'\nimport { magic } from '../magics'\n\nmagic('store', getStores)\n","import { scope } from '../scope'\nimport { magic } from '../magics'\n\nmagic('data', el => scope(el))\n","import { closestRoot } from \"../lifecycle\";\nimport { magic } from \"../magics\";\n\nmagic('root', el => closestRoot(el))\n","import { closestRoot } from '../lifecycle'\nimport { mergeProxies } from '../scope'\nimport { magic } from '../magics'\n\nmagic('refs', el => {\n    if (el._x_refs_proxy) return el._x_refs_proxy\n\n    el._x_refs_proxy = mergeProxies(getArrayOfRefObject(el))\n\n    return el._x_refs_proxy\n})\n\nfunction getArrayOfRefObject(el) {\n    let refObjects = []\n\n    let currentEl = el\n\n    while (currentEl) {\n        if (currentEl._x_refs) refObjects.push(currentEl._x_refs)\n\n        currentEl = currentEl.parentNode\n    }\n\n    return refObjects\n}\n","import { magic } from '../magics'\nimport { closestIdRoot, findAndIncrementId } from '../ids'\nimport { interceptClone } from '../clone'\n\nmagic('id', (el, { cleanup }) => (name, key = null) => {\n    let cacheKey = `${name}${key ? `-${key}` : ''}`\n\n    return cacheIdByNameOnElement(el, cacheKey, cleanup, () => {\n        let root = closestIdRoot(el, name)\n\n        let id = root\n            ? root._x_ids[name]\n            : findAndIncrementId(name)\n\n        return key\n            ? `${name}-${id}-${key}`\n            : `${name}-${id}`\n    })\n})\n\ninterceptClone((from, to) => {\n    // Transfer over existing ID registrations from\n    // the existing dom tree over to the new one\n    // so that there aren't ID mismatches...\n    if (from._x_id) {\n        to._x_id = from._x_id\n    }\n})\n\nfunction cacheIdByNameOnElement(el, cacheKey, cleanup, callback)\n{\n    if (! el._x_id) el._x_id = {}\n\n    // We only want $id to run once per an element's lifecycle...\n    if (el._x_id[cacheKey]) return el._x_id[cacheKey]\n\n    let output = callback()\n\n    el._x_id[cacheKey] = output\n\n    cleanup(() => {\n        delete el._x_id[cacheKey]\n    })\n\n    return output\n}\n","import { magic } from \"../magics\";\n\nmagic('el', el => el)\n","import { warn } from '../utils/warn'\nimport { magic } from '../magics'\n\nimport './$nextTick'\nimport './$dispatch'\nimport './$watch'\nimport './$store'\nimport './$data'\nimport './$root'\nimport './$refs'\nimport './$id'\nimport './$el'\n\n// Register warnings for people using plugin syntaxes and not loading the plugin itself:\nwarnMissingPluginMagic('Focus', 'focus', 'focus')\nwarnMissingPluginMagic('Persist', 'persist', 'persist')\n\nfunction warnMissingPluginMagic(name, magicName, slug) {\n    magic(magicName, (el) => warn(`You can't use [$${magicName}] without first installing the \"${name}\" plugin here: https://alpinejs.dev/plugins/${slug}`, el))\n}\n"],"names":["magic","nextTick","el","dispatch","bind","evaluateLater","cleanup","key","callback","evaluate","getter","value","i","unwatch","watch","getStores","scope","closestRoot","_x_refs_proxy","mergeProxies","getArrayOfRefObject","refObjects","currentEl","_x_refs","push","parentNode","name","cacheKey","cacheIdByNameOnElement","root","closestIdRoot","id","_x_ids","findAndIncrementId","interceptClone","from","to","_x_id","output","warnMissingPluginMagic","magicName","slug","warn"],"mappings":"6QAGAA,EAAM,YAAY,IAAMC,ICAxBD,EAAM,YAAYE,GAAMC,EAASC,KAAKD,EAAUD,KCAhDF,EAAM,SAAS,CAACE,GAAMG,gBAAeC,aAAc,CAACC,EAAKC,KACrD,IAAIC,EAAWJ,EAAcE,GAE7B,IAAIG,OAAS,KACT,IAAIC,EAEJF,GAASG,GAAKD,EAAQC,IAEtB,OAAOD,GAGX,IAAIE,EAAUC,EAAMJ,OAAQF,GAE5BF,EAAQO,EAAQ,ICbpBb,EAAM,QAASe,GCAff,EAAM,QAAQE,GAAMc,EAAMd,KCA1BF,EAAM,QAAQE,GAAMe,EAAYf,KCChCF,EAAM,QAAQE,IACV,GAAIA,EAAGgB,cAAe,OAAOhB,EAAGgB,cAEhChB,EAAGgB,cAAgBC,EAAaC,oBAAoBlB,IAEpD,OAAOA,EAAGgB,iBAGd,SAASE,oBAAoBlB,GACzB,IAAImB,EAAa,GAEjB,IAAIC,EAAYpB,EAEhB,MAAOoB,EAAW,CACVA,EAAUC,SAASF,EAAWG,KAAKF,EAAUC,SAEjDD,EAAYA,EAAUG,UACzB,CAED,OAAOJ,CACX,CCpBArB,EAAM,MAAM,CAACE,GAAMI,aAAc,CAACoB,EAAMnB,EAAM,QAC1C,IAAIoB,EAAW,GAAGD,IAAOnB,EAAM,IAAIA,IAAQ,KAE3C,OAAOqB,uBAAuB1B,EAAIyB,EAAUrB,GAAS,KACjD,IAAIuB,EAAOC,EAAc5B,EAAIwB,GAE7B,IAAIK,EAAKF,EACHA,EAAKG,OAAON,GACZO,EAAmBP,GAEzB,OAAOnB,EACD,GAAGmB,KAAQK,KAAMxB,IACjB,GAAGmB,KAAQK,GAAE,GACtB,IAGLG,GAAe,CAACC,EAAMC,KAIdD,EAAKE,QACLD,EAAGC,MAAQF,EAAKE,MACnB,IAGL,SAAST,uBAAuB1B,EAAIyB,EAAUrB,EAASE,GAE7CN,EAAGmC,QAAOnC,EAAGmC,MAAQ,CAAE,GAG7B,GAAInC,EAAGmC,MAAMV,GAAW,OAAOzB,EAAGmC,MAAMV,GAExC,IAAIW,EAAS9B,IAEbN,EAAGmC,MAAMV,GAAYW,EAErBhC,GAAQ,YACGJ,EAAGmC,MAAMV,EAAS,IAG7B,OAAOW,CACX,CC3CAtC,EAAM,MAAME,GAAMA,ICYlBqC,uBAAuB,QAAS,QAAS,SACzCA,uBAAuB,UAAW,UAAW,WAE7C,SAASA,uBAAuBb,EAAMc,EAAWC,GAC7CzC,EAAMwC,GAAYtC,GAAOwC,EAAK,mBAAmBF,oCAA4Cd,gDAAmDe,IAAQvC,IAC5J"}