// alpinejs@3.13.5/src/scope.js downloaded from https://ga.jspm.io/npm:alpinejs@3.13.5/src/scope.js

function scope(t){return mergeProxies(closestDataStack(t))}function addScopeToNode(t,e,o){t._x_dataStack=[e,...closestDataStack(o||t)];return()=>{t._x_dataStack=t._x_dataStack.filter((t=>t!==e))}}function hasScope(t){return!!t._x_dataStack}function closestDataStack(t){return t._x_dataStack?t._x_dataStack:typeof ShadowRoot==="function"&&t instanceof ShadowRoot?closestDataStack(t.host):t.parentNode?closestDataStack(t.parentNode):[]}function closestDataProxy(t){return mergeProxies(closestDataStack(t))}function mergeProxies(e){return new Proxy({objects:e},t)}let t={ownKeys({objects:t}){return Array.from(new Set(t.flatMap((t=>Object.keys(t)))))},has({objects:t},e){return e!=Symbol.unscopables&&t.some((t=>Object.prototype.hasOwnProperty.call(t,e)))},get({objects:t},e,o){return e=="toJSON"?collapseProxies:Reflect.get(t.find((t=>Object.prototype.hasOwnProperty.call(t,e)))||{},e,o)},set({objects:t},e,o,a){const c=t.find((t=>Object.prototype.hasOwnProperty.call(t,e)))||t[t.length-1];const r=Object.getOwnPropertyDescriptor(c,e);return r?.set&&r?.get?Reflect.set(c,e,o,a):Reflect.set(c,e,o)}};function collapseProxies(){let t=Reflect.ownKeys(this);return t.reduce(((t,e)=>{t[e]=Reflect.get(this,e);return t}),{})}export{addScopeToNode,closestDataProxy,closestDataStack,hasScope,mergeProxies,scope};

